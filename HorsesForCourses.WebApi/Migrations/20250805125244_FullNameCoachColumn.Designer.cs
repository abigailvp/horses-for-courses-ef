// <auto-generated />
using System;
using HorsesForCourses.WebApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorsesForCourses.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250805125244_FullNameCoachColumn")]
    partial class FullNameCoachColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HorsesForCourses.Core.DomainEntities.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameCoach")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("FullName");

                    b.Property<int>("numberOfAssignedCourses")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoachId");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("HorsesForCourses.Core.DomainEntities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoachId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("EndDateCourse")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameCourse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDateCourse")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("hasCoach")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("hasSchedule")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseId");

                    b.HasIndex("CoachId");

                    b.HasIndex("NameCourse")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("HorsesForCourses.Core.DomainEntities.Coach", b =>
                {
                    b.OwnsMany("HorsesForCourses.Core.WholeValuesAndStuff.Skill", "ListOfCompetences", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("CoachId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Name");

                            b1.HasKey("Id");

                            b1.HasIndex("CoachId");

                            b1.ToTable("Skill", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CoachId");
                        });

                    b.Navigation("ListOfCompetences");
                });

            modelBuilder.Entity("HorsesForCourses.Core.DomainEntities.Course", b =>
                {
                    b.HasOne("HorsesForCourses.Core.DomainEntities.Coach", "CoachForCourse")
                        .WithMany("ListOfCoursesAssignedTo")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoachForCourse");
                });

            modelBuilder.Entity("HorsesForCourses.Core.DomainEntities.Coach", b =>
                {
                    b.Navigation("ListOfCoursesAssignedTo");
                });
#pragma warning restore 612, 618
        }
    }
}
